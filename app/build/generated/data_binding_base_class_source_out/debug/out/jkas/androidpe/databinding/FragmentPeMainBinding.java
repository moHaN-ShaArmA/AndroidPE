// Generated by view binder compiler. Do not edit!
package jkas.androidpe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.R;

public final class FragmentPeMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout linDataLayouts;

  @NonNull
  public final LinearLayout linDataSC;

  @NonNull
  public final TextView tvFilesCount;

  @NonNull
  public final TextView tvFilesCount2;

  @NonNull
  public final TextView tvFilesPkgCount;

  @NonNull
  public final TextView tvFilesPkgCount2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View viewClassGradientBottom;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View viewClassGradientTop;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View viewLayoutGradientBottom;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View viewLayoutGradientTop;

  private FragmentPeMainBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout linDataLayouts, @NonNull LinearLayout linDataSC,
      @NonNull TextView tvFilesCount, @NonNull TextView tvFilesCount2,
      @NonNull TextView tvFilesPkgCount, @NonNull TextView tvFilesPkgCount2,
      @Nullable View viewClassGradientBottom, @Nullable View viewClassGradientTop,
      @Nullable View viewLayoutGradientBottom, @Nullable View viewLayoutGradientTop) {
    this.rootView = rootView;
    this.linDataLayouts = linDataLayouts;
    this.linDataSC = linDataSC;
    this.tvFilesCount = tvFilesCount;
    this.tvFilesCount2 = tvFilesCount2;
    this.tvFilesPkgCount = tvFilesPkgCount;
    this.tvFilesPkgCount2 = tvFilesPkgCount2;
    this.viewClassGradientBottom = viewClassGradientBottom;
    this.viewClassGradientTop = viewClassGradientTop;
    this.viewLayoutGradientBottom = viewLayoutGradientBottom;
    this.viewLayoutGradientTop = viewLayoutGradientTop;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPeMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPeMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pe_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPeMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linDataLayouts;
      LinearLayout linDataLayouts = ViewBindings.findChildViewById(rootView, id);
      if (linDataLayouts == null) {
        break missingId;
      }

      id = R.id.linDataSC;
      LinearLayout linDataSC = ViewBindings.findChildViewById(rootView, id);
      if (linDataSC == null) {
        break missingId;
      }

      id = R.id.tvFilesCount;
      TextView tvFilesCount = ViewBindings.findChildViewById(rootView, id);
      if (tvFilesCount == null) {
        break missingId;
      }

      id = R.id.tvFilesCount2;
      TextView tvFilesCount2 = ViewBindings.findChildViewById(rootView, id);
      if (tvFilesCount2 == null) {
        break missingId;
      }

      id = R.id.tvFilesPkgCount;
      TextView tvFilesPkgCount = ViewBindings.findChildViewById(rootView, id);
      if (tvFilesPkgCount == null) {
        break missingId;
      }

      id = R.id.tvFilesPkgCount2;
      TextView tvFilesPkgCount2 = ViewBindings.findChildViewById(rootView, id);
      if (tvFilesPkgCount2 == null) {
        break missingId;
      }

      id = R.id.viewClassGradientBottom;
      View viewClassGradientBottom = ViewBindings.findChildViewById(rootView, id);

      id = R.id.viewClassGradientTop;
      View viewClassGradientTop = ViewBindings.findChildViewById(rootView, id);

      id = R.id.viewLayoutGradientBottom;
      View viewLayoutGradientBottom = ViewBindings.findChildViewById(rootView, id);

      id = R.id.viewLayoutGradientTop;
      View viewLayoutGradientTop = ViewBindings.findChildViewById(rootView, id);

      return new FragmentPeMainBinding((RelativeLayout) rootView, linDataLayouts, linDataSC,
          tvFilesCount, tvFilesCount2, tvFilesPkgCount, tvFilesPkgCount2, viewClassGradientBottom,
          viewClassGradientTop, viewLayoutGradientBottom, viewLayoutGradientTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
