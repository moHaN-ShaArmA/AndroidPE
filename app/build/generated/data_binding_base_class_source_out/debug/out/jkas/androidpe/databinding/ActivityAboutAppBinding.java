// Generated by view binder compiler. Do not edit!
package jkas.androidpe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.R;

public final class ActivityAboutAppBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final LinearLayout linGithub;

  @NonNull
  public final LinearLayout linGmail;

  @NonNull
  public final LinearLayout linTelegram;

  @NonNull
  public final LottieAnimationView lottieIcon;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityAboutAppBinding(@NonNull LinearLayout rootView, @NonNull AppBarLayout appbar,
      @NonNull LinearLayout linGithub, @NonNull LinearLayout linGmail,
      @NonNull LinearLayout linTelegram, @NonNull LottieAnimationView lottieIcon,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.linGithub = linGithub;
    this.linGmail = linGmail;
    this.linTelegram = linTelegram;
    this.lottieIcon = lottieIcon;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAboutAppBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAboutAppBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_about_app, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAboutAppBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.linGithub;
      LinearLayout linGithub = ViewBindings.findChildViewById(rootView, id);
      if (linGithub == null) {
        break missingId;
      }

      id = R.id.linGmail;
      LinearLayout linGmail = ViewBindings.findChildViewById(rootView, id);
      if (linGmail == null) {
        break missingId;
      }

      id = R.id.linTelegram;
      LinearLayout linTelegram = ViewBindings.findChildViewById(rootView, id);
      if (linTelegram == null) {
        break missingId;
      }

      id = R.id.lottieIcon;
      LottieAnimationView lottieIcon = ViewBindings.findChildViewById(rootView, id);
      if (lottieIcon == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAboutAppBinding((LinearLayout) rootView, appbar, linGithub, linGmail,
          linTelegram, lottieIcon, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
