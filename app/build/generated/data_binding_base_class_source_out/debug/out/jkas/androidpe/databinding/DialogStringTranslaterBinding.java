// Generated by view binder compiler. Do not edit!
package jkas.androidpe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.R;

public final class DialogStringTranslaterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnLangs;

  @NonNull
  public final MaterialButton btnProcess;

  @NonNull
  public final MaterialButtonToggleGroup btnToggle;

  @NonNull
  public final ExtendedFloatingActionButton btnTranslate;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final ImageView icRefresh;

  @NonNull
  public final LinearLayout linInfoProcess;

  @NonNull
  public final LinearProgressIndicator progress;

  @NonNull
  public final TextView tvInfo;

  @NonNull
  public final TextView tvModule;

  @NonNull
  public final ViewFlipper vf;

  private DialogStringTranslaterBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton btnLangs, @NonNull MaterialButton btnProcess,
      @NonNull MaterialButtonToggleGroup btnToggle,
      @NonNull ExtendedFloatingActionButton btnTranslate, @NonNull ChipGroup chipGroup,
      @NonNull ImageView icRefresh, @NonNull LinearLayout linInfoProcess,
      @NonNull LinearProgressIndicator progress, @NonNull TextView tvInfo,
      @NonNull TextView tvModule, @NonNull ViewFlipper vf) {
    this.rootView = rootView;
    this.btnLangs = btnLangs;
    this.btnProcess = btnProcess;
    this.btnToggle = btnToggle;
    this.btnTranslate = btnTranslate;
    this.chipGroup = chipGroup;
    this.icRefresh = icRefresh;
    this.linInfoProcess = linInfoProcess;
    this.progress = progress;
    this.tvInfo = tvInfo;
    this.tvModule = tvModule;
    this.vf = vf;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogStringTranslaterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogStringTranslaterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_string_translater, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogStringTranslaterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLangs;
      MaterialButton btnLangs = ViewBindings.findChildViewById(rootView, id);
      if (btnLangs == null) {
        break missingId;
      }

      id = R.id.btnProcess;
      MaterialButton btnProcess = ViewBindings.findChildViewById(rootView, id);
      if (btnProcess == null) {
        break missingId;
      }

      id = R.id.btnToggle;
      MaterialButtonToggleGroup btnToggle = ViewBindings.findChildViewById(rootView, id);
      if (btnToggle == null) {
        break missingId;
      }

      id = R.id.btnTranslate;
      ExtendedFloatingActionButton btnTranslate = ViewBindings.findChildViewById(rootView, id);
      if (btnTranslate == null) {
        break missingId;
      }

      id = R.id.chipGroup;
      ChipGroup chipGroup = ViewBindings.findChildViewById(rootView, id);
      if (chipGroup == null) {
        break missingId;
      }

      id = R.id.icRefresh;
      ImageView icRefresh = ViewBindings.findChildViewById(rootView, id);
      if (icRefresh == null) {
        break missingId;
      }

      id = R.id.linInfoProcess;
      LinearLayout linInfoProcess = ViewBindings.findChildViewById(rootView, id);
      if (linInfoProcess == null) {
        break missingId;
      }

      id = R.id.progress;
      LinearProgressIndicator progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.tvInfo;
      TextView tvInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvInfo == null) {
        break missingId;
      }

      id = R.id.tvModule;
      TextView tvModule = ViewBindings.findChildViewById(rootView, id);
      if (tvModule == null) {
        break missingId;
      }

      id = R.id.vf;
      ViewFlipper vf = ViewBindings.findChildViewById(rootView, id);
      if (vf == null) {
        break missingId;
      }

      return new DialogStringTranslaterBinding((LinearLayout) rootView, btnLangs, btnProcess,
          btnToggle, btnTranslate, chipGroup, icRefresh, linInfoProcess, progress, tvInfo, tvModule,
          vf);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
