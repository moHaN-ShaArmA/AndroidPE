// Generated by view binder compiler. Do not edit!
package jkas.androidpe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.R;

public final class LayoutProjectViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView icIconProject;

  @NonNull
  public final ImageView icMoreSettings;

  @NonNull
  public final TextView tvFolderName;

  @NonNull
  public final TextView tvPackageName;

  @NonNull
  public final TextView tvPathToProject;

  private LayoutProjectViewBinding(@NonNull LinearLayout rootView, @NonNull ImageView icIconProject,
      @NonNull ImageView icMoreSettings, @NonNull TextView tvFolderName,
      @NonNull TextView tvPackageName, @NonNull TextView tvPathToProject) {
    this.rootView = rootView;
    this.icIconProject = icIconProject;
    this.icMoreSettings = icMoreSettings;
    this.tvFolderName = tvFolderName;
    this.tvPackageName = tvPackageName;
    this.tvPathToProject = tvPathToProject;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutProjectViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutProjectViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_project_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutProjectViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ic_icon_project;
      ImageView icIconProject = ViewBindings.findChildViewById(rootView, id);
      if (icIconProject == null) {
        break missingId;
      }

      id = R.id.ic_more_settings;
      ImageView icMoreSettings = ViewBindings.findChildViewById(rootView, id);
      if (icMoreSettings == null) {
        break missingId;
      }

      id = R.id.tv_folder_name;
      TextView tvFolderName = ViewBindings.findChildViewById(rootView, id);
      if (tvFolderName == null) {
        break missingId;
      }

      id = R.id.tv_package_name;
      TextView tvPackageName = ViewBindings.findChildViewById(rootView, id);
      if (tvPackageName == null) {
        break missingId;
      }

      id = R.id.tv_path_to_project;
      TextView tvPathToProject = ViewBindings.findChildViewById(rootView, id);
      if (tvPathToProject == null) {
        break missingId;
      }

      return new LayoutProjectViewBinding((LinearLayout) rootView, icIconProject, icMoreSettings,
          tvFolderName, tvPackageName, tvPathToProject);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
