// Generated by view binder compiler. Do not edit!
package jkas.androidpe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.R;

public final class ActivityProjectEditorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout bottomSheet;

  @NonNull
  public final MaterialButton btnAllModule;

  @NonNull
  public final MaterialButton btnNewModule;

  @NonNull
  public final MaterialButton btnSync;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final CoordinatorLayout coordinator;

  @NonNull
  public final ImageView icIcon;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout linBar;

  @NonNull
  public final LinearLayout linBottomMain;

  @NonNull
  public final LinearLayout linBottomSheet;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout linLeftBar;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView tvFolderName;

  @NonNull
  public final TextView tvInfoBottomSheet;

  @NonNull
  public final TextView tvPackageName;

  @NonNull
  public final ViewPager2 viewPager;

  private ActivityProjectEditorBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout bottomSheet, @NonNull MaterialButton btnAllModule,
      @NonNull MaterialButton btnNewModule, @NonNull MaterialButton btnSync,
      @Nullable CoordinatorLayout coordinator, @NonNull ImageView icIcon,
      @Nullable LinearLayout linBar, @NonNull LinearLayout linBottomMain,
      @NonNull LinearLayout linBottomSheet, @Nullable LinearLayout linLeftBar,
      @NonNull NestedScrollView nestedScrollView, @NonNull TabLayout tabLayout,
      @NonNull TextView tvFolderName, @NonNull TextView tvInfoBottomSheet,
      @NonNull TextView tvPackageName, @NonNull ViewPager2 viewPager) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.btnAllModule = btnAllModule;
    this.btnNewModule = btnNewModule;
    this.btnSync = btnSync;
    this.coordinator = coordinator;
    this.icIcon = icIcon;
    this.linBar = linBar;
    this.linBottomMain = linBottomMain;
    this.linBottomSheet = linBottomSheet;
    this.linLeftBar = linLeftBar;
    this.nestedScrollView = nestedScrollView;
    this.tabLayout = tabLayout;
    this.tvFolderName = tvFolderName;
    this.tvInfoBottomSheet = tvInfoBottomSheet;
    this.tvPackageName = tvPackageName;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProjectEditorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProjectEditorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_project_editor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProjectEditorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomSheet;
      LinearLayout bottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheet == null) {
        break missingId;
      }

      id = R.id.btnAllModule;
      MaterialButton btnAllModule = ViewBindings.findChildViewById(rootView, id);
      if (btnAllModule == null) {
        break missingId;
      }

      id = R.id.btnNewModule;
      MaterialButton btnNewModule = ViewBindings.findChildViewById(rootView, id);
      if (btnNewModule == null) {
        break missingId;
      }

      id = R.id.btnSync;
      MaterialButton btnSync = ViewBindings.findChildViewById(rootView, id);
      if (btnSync == null) {
        break missingId;
      }

      id = R.id.coordinator;
      CoordinatorLayout coordinator = ViewBindings.findChildViewById(rootView, id);

      id = R.id.icIcon;
      ImageView icIcon = ViewBindings.findChildViewById(rootView, id);
      if (icIcon == null) {
        break missingId;
      }

      id = R.id.linBar;
      LinearLayout linBar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linBottomMain;
      LinearLayout linBottomMain = ViewBindings.findChildViewById(rootView, id);
      if (linBottomMain == null) {
        break missingId;
      }

      id = R.id.linBottomSheet;
      LinearLayout linBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (linBottomSheet == null) {
        break missingId;
      }

      id = R.id.linLeftBar;
      LinearLayout linLeftBar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.tvFolderName;
      TextView tvFolderName = ViewBindings.findChildViewById(rootView, id);
      if (tvFolderName == null) {
        break missingId;
      }

      id = R.id.tvInfoBottomSheet;
      TextView tvInfoBottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (tvInfoBottomSheet == null) {
        break missingId;
      }

      id = R.id.tvPackageName;
      TextView tvPackageName = ViewBindings.findChildViewById(rootView, id);
      if (tvPackageName == null) {
        break missingId;
      }

      id = R.id.view_pager;
      ViewPager2 viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityProjectEditorBinding((LinearLayout) rootView, bottomSheet, btnAllModule,
          btnNewModule, btnSync, coordinator, icIcon, linBar, linBottomMain, linBottomSheet,
          linLeftBar, nestedScrollView, tabLayout, tvFolderName, tvInfoBottomSheet, tvPackageName,
          viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
