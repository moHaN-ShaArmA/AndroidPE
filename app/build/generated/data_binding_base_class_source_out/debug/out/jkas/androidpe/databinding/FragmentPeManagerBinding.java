// Generated by view binder compiler. Do not edit!
package jkas.androidpe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.R;

public final class FragmentPeManagerBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnActivitiesAdded;

  @NonNull
  public final Button btnAddProjectsDependencies;

  @NonNull
  public final Button btnDependencies;

  @NonNull
  public final Button btnIconesAdded;

  @NonNull
  public final Button btnPermissionsAdded;

  @NonNull
  public final Button btnProvidersAdded;

  @NonNull
  public final Button btnReceiversAdded;

  @NonNull
  public final Button btnServicesAdded;

  @NonNull
  public final Button btnShowAllRefModules;

  @NonNull
  public final Button btnStrings;

  @NonNull
  public final MaterialCardView cardActivities;

  @NonNull
  public final MaterialCardView cardIcones;

  @NonNull
  public final MaterialCardView cardPermissions;

  @NonNull
  public final MaterialCardView cardProviders;

  @NonNull
  public final MaterialCardView cardReceivers;

  @NonNull
  public final MaterialCardView cardServices;

  @NonNull
  public final MaterialCardView cardStrings;

  @NonNull
  public final TextView tvCurrentModules;

  private FragmentPeManagerBinding(@NonNull ScrollView rootView, @NonNull Button btnActivitiesAdded,
      @NonNull Button btnAddProjectsDependencies, @NonNull Button btnDependencies,
      @NonNull Button btnIconesAdded, @NonNull Button btnPermissionsAdded,
      @NonNull Button btnProvidersAdded, @NonNull Button btnReceiversAdded,
      @NonNull Button btnServicesAdded, @NonNull Button btnShowAllRefModules,
      @NonNull Button btnStrings, @NonNull MaterialCardView cardActivities,
      @NonNull MaterialCardView cardIcones, @NonNull MaterialCardView cardPermissions,
      @NonNull MaterialCardView cardProviders, @NonNull MaterialCardView cardReceivers,
      @NonNull MaterialCardView cardServices, @NonNull MaterialCardView cardStrings,
      @NonNull TextView tvCurrentModules) {
    this.rootView = rootView;
    this.btnActivitiesAdded = btnActivitiesAdded;
    this.btnAddProjectsDependencies = btnAddProjectsDependencies;
    this.btnDependencies = btnDependencies;
    this.btnIconesAdded = btnIconesAdded;
    this.btnPermissionsAdded = btnPermissionsAdded;
    this.btnProvidersAdded = btnProvidersAdded;
    this.btnReceiversAdded = btnReceiversAdded;
    this.btnServicesAdded = btnServicesAdded;
    this.btnShowAllRefModules = btnShowAllRefModules;
    this.btnStrings = btnStrings;
    this.cardActivities = cardActivities;
    this.cardIcones = cardIcones;
    this.cardPermissions = cardPermissions;
    this.cardProviders = cardProviders;
    this.cardReceivers = cardReceivers;
    this.cardServices = cardServices;
    this.cardStrings = cardStrings;
    this.tvCurrentModules = tvCurrentModules;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPeManagerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPeManagerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pe_manager, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPeManagerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnActivitiesAdded;
      Button btnActivitiesAdded = ViewBindings.findChildViewById(rootView, id);
      if (btnActivitiesAdded == null) {
        break missingId;
      }

      id = R.id.btnAddProjectsDependencies;
      Button btnAddProjectsDependencies = ViewBindings.findChildViewById(rootView, id);
      if (btnAddProjectsDependencies == null) {
        break missingId;
      }

      id = R.id.btnDependencies;
      Button btnDependencies = ViewBindings.findChildViewById(rootView, id);
      if (btnDependencies == null) {
        break missingId;
      }

      id = R.id.btnIconesAdded;
      Button btnIconesAdded = ViewBindings.findChildViewById(rootView, id);
      if (btnIconesAdded == null) {
        break missingId;
      }

      id = R.id.btnPermissionsAdded;
      Button btnPermissionsAdded = ViewBindings.findChildViewById(rootView, id);
      if (btnPermissionsAdded == null) {
        break missingId;
      }

      id = R.id.btnProvidersAdded;
      Button btnProvidersAdded = ViewBindings.findChildViewById(rootView, id);
      if (btnProvidersAdded == null) {
        break missingId;
      }

      id = R.id.btnReceiversAdded;
      Button btnReceiversAdded = ViewBindings.findChildViewById(rootView, id);
      if (btnReceiversAdded == null) {
        break missingId;
      }

      id = R.id.btnServicesAdded;
      Button btnServicesAdded = ViewBindings.findChildViewById(rootView, id);
      if (btnServicesAdded == null) {
        break missingId;
      }

      id = R.id.btnShowAllRefModules;
      Button btnShowAllRefModules = ViewBindings.findChildViewById(rootView, id);
      if (btnShowAllRefModules == null) {
        break missingId;
      }

      id = R.id.btnStrings;
      Button btnStrings = ViewBindings.findChildViewById(rootView, id);
      if (btnStrings == null) {
        break missingId;
      }

      id = R.id.cardActivities;
      MaterialCardView cardActivities = ViewBindings.findChildViewById(rootView, id);
      if (cardActivities == null) {
        break missingId;
      }

      id = R.id.cardIcones;
      MaterialCardView cardIcones = ViewBindings.findChildViewById(rootView, id);
      if (cardIcones == null) {
        break missingId;
      }

      id = R.id.cardPermissions;
      MaterialCardView cardPermissions = ViewBindings.findChildViewById(rootView, id);
      if (cardPermissions == null) {
        break missingId;
      }

      id = R.id.cardProviders;
      MaterialCardView cardProviders = ViewBindings.findChildViewById(rootView, id);
      if (cardProviders == null) {
        break missingId;
      }

      id = R.id.cardReceivers;
      MaterialCardView cardReceivers = ViewBindings.findChildViewById(rootView, id);
      if (cardReceivers == null) {
        break missingId;
      }

      id = R.id.cardServices;
      MaterialCardView cardServices = ViewBindings.findChildViewById(rootView, id);
      if (cardServices == null) {
        break missingId;
      }

      id = R.id.cardStrings;
      MaterialCardView cardStrings = ViewBindings.findChildViewById(rootView, id);
      if (cardStrings == null) {
        break missingId;
      }

      id = R.id.tvCurrentModules;
      TextView tvCurrentModules = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentModules == null) {
        break missingId;
      }

      return new FragmentPeManagerBinding((ScrollView) rootView, btnActivitiesAdded,
          btnAddProjectsDependencies, btnDependencies, btnIconesAdded, btnPermissionsAdded,
          btnProvidersAdded, btnReceiversAdded, btnServicesAdded, btnShowAllRefModules, btnStrings,
          cardActivities, cardIcones, cardPermissions, cardProviders, cardReceivers, cardServices,
          cardStrings, tvCurrentModules);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
