// Generated by view binder compiler. Do not edit!
package jkas.androidpe.layoutUiDesigner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.layoutUiDesigner.R;
import jkas.androidpe.layoutUiDesigner.palette.MainView;

public final class LayoutLayoutUiDesignerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final ImageView imgAllViews;

  @NonNull
  public final ImageView imgDelete;

  @NonNull
  public final ImageView imgFileTree;

  @NonNull
  public final ImageView imgFull;

  @NonNull
  public final ImageView imgInfo;

  @NonNull
  public final ImageView imgLayers;

  @NonNull
  public final ImageView imgRefresh;

  @NonNull
  public final NavigationView leftDrawer;

  @NonNull
  public final MainView linContainer;

  @NonNull
  public final NavigationView rightDrawer;

  @NonNull
  public final TextView tvInfo;

  private LayoutLayoutUiDesignerBinding(@NonNull RelativeLayout rootView,
      @NonNull DrawerLayout drawerLayout, @NonNull ImageView imgAllViews,
      @NonNull ImageView imgDelete, @NonNull ImageView imgFileTree, @NonNull ImageView imgFull,
      @NonNull ImageView imgInfo, @NonNull ImageView imgLayers, @NonNull ImageView imgRefresh,
      @NonNull NavigationView leftDrawer, @NonNull MainView linContainer,
      @NonNull NavigationView rightDrawer, @NonNull TextView tvInfo) {
    this.rootView = rootView;
    this.drawerLayout = drawerLayout;
    this.imgAllViews = imgAllViews;
    this.imgDelete = imgDelete;
    this.imgFileTree = imgFileTree;
    this.imgFull = imgFull;
    this.imgInfo = imgInfo;
    this.imgLayers = imgLayers;
    this.imgRefresh = imgRefresh;
    this.leftDrawer = leftDrawer;
    this.linContainer = linContainer;
    this.rightDrawer = rightDrawer;
    this.tvInfo = tvInfo;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutLayoutUiDesignerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutLayoutUiDesignerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_layout_ui_designer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutLayoutUiDesignerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.drawerLayout;
      DrawerLayout drawerLayout = ViewBindings.findChildViewById(rootView, id);
      if (drawerLayout == null) {
        break missingId;
      }

      id = R.id.imgAllViews;
      ImageView imgAllViews = ViewBindings.findChildViewById(rootView, id);
      if (imgAllViews == null) {
        break missingId;
      }

      id = R.id.imgDelete;
      ImageView imgDelete = ViewBindings.findChildViewById(rootView, id);
      if (imgDelete == null) {
        break missingId;
      }

      id = R.id.imgFileTree;
      ImageView imgFileTree = ViewBindings.findChildViewById(rootView, id);
      if (imgFileTree == null) {
        break missingId;
      }

      id = R.id.imgFull;
      ImageView imgFull = ViewBindings.findChildViewById(rootView, id);
      if (imgFull == null) {
        break missingId;
      }

      id = R.id.imgInfo;
      ImageView imgInfo = ViewBindings.findChildViewById(rootView, id);
      if (imgInfo == null) {
        break missingId;
      }

      id = R.id.imgLayers;
      ImageView imgLayers = ViewBindings.findChildViewById(rootView, id);
      if (imgLayers == null) {
        break missingId;
      }

      id = R.id.imgRefresh;
      ImageView imgRefresh = ViewBindings.findChildViewById(rootView, id);
      if (imgRefresh == null) {
        break missingId;
      }

      id = R.id.left_drawer;
      NavigationView leftDrawer = ViewBindings.findChildViewById(rootView, id);
      if (leftDrawer == null) {
        break missingId;
      }

      id = R.id.linContainer;
      MainView linContainer = ViewBindings.findChildViewById(rootView, id);
      if (linContainer == null) {
        break missingId;
      }

      id = R.id.right_drawer;
      NavigationView rightDrawer = ViewBindings.findChildViewById(rootView, id);
      if (rightDrawer == null) {
        break missingId;
      }

      id = R.id.tvInfo;
      TextView tvInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvInfo == null) {
        break missingId;
      }

      return new LayoutLayoutUiDesignerBinding((RelativeLayout) rootView, drawerLayout, imgAllViews,
          imgDelete, imgFileTree, imgFull, imgInfo, imgLayers, imgRefresh, leftDrawer, linContainer,
          rightDrawer, tvInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
