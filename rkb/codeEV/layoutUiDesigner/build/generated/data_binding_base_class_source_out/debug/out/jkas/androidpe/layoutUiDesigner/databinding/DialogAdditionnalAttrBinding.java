// Generated by view binder compiler. Do not edit!
package jkas.androidpe.layoutUiDesigner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.MultiAutoCompleteTextView;
import android.widget.TextView;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.layoutUiDesigner.R;

public final class DialogAdditionnalAttrBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MultiAutoCompleteTextView autoCompAttr;

  @NonNull
  public final MultiAutoCompleteTextView autoCompValue;

  @NonNull
  public final MaterialButton btnAdd;

  @NonNull
  public final MaterialButton btnAdditional;

  @NonNull
  public final MaterialButton btnCommon;

  @NonNull
  public final LinearLayout lin;

  @NonNull
  public final TextInputLayout tilAttr;

  @NonNull
  public final TextInputLayout tilValue;

  @NonNull
  public final MaterialButtonToggleGroup toggleType;

  @NonNull
  public final TextView tv;

  @NonNull
  public final ViewFlipper vf;

  private DialogAdditionnalAttrBinding(@NonNull LinearLayout rootView,
      @NonNull MultiAutoCompleteTextView autoCompAttr,
      @NonNull MultiAutoCompleteTextView autoCompValue, @NonNull MaterialButton btnAdd,
      @NonNull MaterialButton btnAdditional, @NonNull MaterialButton btnCommon,
      @NonNull LinearLayout lin, @NonNull TextInputLayout tilAttr,
      @NonNull TextInputLayout tilValue, @NonNull MaterialButtonToggleGroup toggleType,
      @NonNull TextView tv, @NonNull ViewFlipper vf) {
    this.rootView = rootView;
    this.autoCompAttr = autoCompAttr;
    this.autoCompValue = autoCompValue;
    this.btnAdd = btnAdd;
    this.btnAdditional = btnAdditional;
    this.btnCommon = btnCommon;
    this.lin = lin;
    this.tilAttr = tilAttr;
    this.tilValue = tilValue;
    this.toggleType = toggleType;
    this.tv = tv;
    this.vf = vf;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAdditionnalAttrBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAdditionnalAttrBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_additionnal_attr, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAdditionnalAttrBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoCompAttr;
      MultiAutoCompleteTextView autoCompAttr = ViewBindings.findChildViewById(rootView, id);
      if (autoCompAttr == null) {
        break missingId;
      }

      id = R.id.autoCompValue;
      MultiAutoCompleteTextView autoCompValue = ViewBindings.findChildViewById(rootView, id);
      if (autoCompValue == null) {
        break missingId;
      }

      id = R.id.btnAdd;
      MaterialButton btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnAdditional;
      MaterialButton btnAdditional = ViewBindings.findChildViewById(rootView, id);
      if (btnAdditional == null) {
        break missingId;
      }

      id = R.id.btnCommon;
      MaterialButton btnCommon = ViewBindings.findChildViewById(rootView, id);
      if (btnCommon == null) {
        break missingId;
      }

      id = R.id.lin;
      LinearLayout lin = ViewBindings.findChildViewById(rootView, id);
      if (lin == null) {
        break missingId;
      }

      id = R.id.tilAttr;
      TextInputLayout tilAttr = ViewBindings.findChildViewById(rootView, id);
      if (tilAttr == null) {
        break missingId;
      }

      id = R.id.tilValue;
      TextInputLayout tilValue = ViewBindings.findChildViewById(rootView, id);
      if (tilValue == null) {
        break missingId;
      }

      id = R.id.toggleType;
      MaterialButtonToggleGroup toggleType = ViewBindings.findChildViewById(rootView, id);
      if (toggleType == null) {
        break missingId;
      }

      id = R.id.tv;
      TextView tv = ViewBindings.findChildViewById(rootView, id);
      if (tv == null) {
        break missingId;
      }

      id = R.id.vf;
      ViewFlipper vf = ViewBindings.findChildViewById(rootView, id);
      if (vf == null) {
        break missingId;
      }

      return new DialogAdditionnalAttrBinding((LinearLayout) rootView, autoCompAttr, autoCompValue,
          btnAdd, btnAdditional, btnCommon, lin, tilAttr, tilValue, toggleType, tv, vf);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
