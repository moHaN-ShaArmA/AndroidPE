// Generated by view binder compiler. Do not edit!
package jkas.androidpe.layoutUiDesigner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.MultiAutoCompleteTextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.layoutUiDesigner.R;

public final class DialogLayoutGravityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MultiAutoCompleteTextView autoComp;

  @NonNull
  public final CheckBox cbCenterHorizontal;

  @NonNull
  public final CheckBox cbCenterVertical;

  @NonNull
  public final CheckBox cbClipHorizontal;

  @NonNull
  public final CheckBox cbClipVertical;

  @NonNull
  public final CheckBox cbEnd;

  @NonNull
  public final CheckBox cbFill;

  @NonNull
  public final CheckBox cbFillHorizontal;

  @NonNull
  public final CheckBox cbFillVertical;

  @NonNull
  public final CheckBox cbStart;

  @NonNull
  public final ImageView linGravityImg1;

  @NonNull
  public final ImageView linGravityImg2;

  @NonNull
  public final ImageView linGravityImg3;

  @NonNull
  public final ImageView linGravityImg4;

  @NonNull
  public final ImageView linGravityImg5;

  @NonNull
  public final ImageView linGravityImg6;

  @NonNull
  public final ImageView linGravityImg7;

  @NonNull
  public final ImageView linGravityImg8;

  @NonNull
  public final ImageView linGravityImg9;

  @NonNull
  public final TextInputLayout til;

  private DialogLayoutGravityBinding(@NonNull LinearLayout rootView,
      @NonNull MultiAutoCompleteTextView autoComp, @NonNull CheckBox cbCenterHorizontal,
      @NonNull CheckBox cbCenterVertical, @NonNull CheckBox cbClipHorizontal,
      @NonNull CheckBox cbClipVertical, @NonNull CheckBox cbEnd, @NonNull CheckBox cbFill,
      @NonNull CheckBox cbFillHorizontal, @NonNull CheckBox cbFillVertical,
      @NonNull CheckBox cbStart, @NonNull ImageView linGravityImg1,
      @NonNull ImageView linGravityImg2, @NonNull ImageView linGravityImg3,
      @NonNull ImageView linGravityImg4, @NonNull ImageView linGravityImg5,
      @NonNull ImageView linGravityImg6, @NonNull ImageView linGravityImg7,
      @NonNull ImageView linGravityImg8, @NonNull ImageView linGravityImg9,
      @NonNull TextInputLayout til) {
    this.rootView = rootView;
    this.autoComp = autoComp;
    this.cbCenterHorizontal = cbCenterHorizontal;
    this.cbCenterVertical = cbCenterVertical;
    this.cbClipHorizontal = cbClipHorizontal;
    this.cbClipVertical = cbClipVertical;
    this.cbEnd = cbEnd;
    this.cbFill = cbFill;
    this.cbFillHorizontal = cbFillHorizontal;
    this.cbFillVertical = cbFillVertical;
    this.cbStart = cbStart;
    this.linGravityImg1 = linGravityImg1;
    this.linGravityImg2 = linGravityImg2;
    this.linGravityImg3 = linGravityImg3;
    this.linGravityImg4 = linGravityImg4;
    this.linGravityImg5 = linGravityImg5;
    this.linGravityImg6 = linGravityImg6;
    this.linGravityImg7 = linGravityImg7;
    this.linGravityImg8 = linGravityImg8;
    this.linGravityImg9 = linGravityImg9;
    this.til = til;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogLayoutGravityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogLayoutGravityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_layout_gravity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogLayoutGravityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoComp;
      MultiAutoCompleteTextView autoComp = ViewBindings.findChildViewById(rootView, id);
      if (autoComp == null) {
        break missingId;
      }

      id = R.id.cbCenterHorizontal;
      CheckBox cbCenterHorizontal = ViewBindings.findChildViewById(rootView, id);
      if (cbCenterHorizontal == null) {
        break missingId;
      }

      id = R.id.cbCenterVertical;
      CheckBox cbCenterVertical = ViewBindings.findChildViewById(rootView, id);
      if (cbCenterVertical == null) {
        break missingId;
      }

      id = R.id.cbClipHorizontal;
      CheckBox cbClipHorizontal = ViewBindings.findChildViewById(rootView, id);
      if (cbClipHorizontal == null) {
        break missingId;
      }

      id = R.id.cbClip_vertical;
      CheckBox cbClipVertical = ViewBindings.findChildViewById(rootView, id);
      if (cbClipVertical == null) {
        break missingId;
      }

      id = R.id.cbEnd;
      CheckBox cbEnd = ViewBindings.findChildViewById(rootView, id);
      if (cbEnd == null) {
        break missingId;
      }

      id = R.id.cbFill;
      CheckBox cbFill = ViewBindings.findChildViewById(rootView, id);
      if (cbFill == null) {
        break missingId;
      }

      id = R.id.cbFill_Horizontal;
      CheckBox cbFillHorizontal = ViewBindings.findChildViewById(rootView, id);
      if (cbFillHorizontal == null) {
        break missingId;
      }

      id = R.id.cbFill_Vertical;
      CheckBox cbFillVertical = ViewBindings.findChildViewById(rootView, id);
      if (cbFillVertical == null) {
        break missingId;
      }

      id = R.id.cbStart;
      CheckBox cbStart = ViewBindings.findChildViewById(rootView, id);
      if (cbStart == null) {
        break missingId;
      }

      id = R.id.linGravity_img1;
      ImageView linGravityImg1 = ViewBindings.findChildViewById(rootView, id);
      if (linGravityImg1 == null) {
        break missingId;
      }

      id = R.id.linGravity_img2;
      ImageView linGravityImg2 = ViewBindings.findChildViewById(rootView, id);
      if (linGravityImg2 == null) {
        break missingId;
      }

      id = R.id.linGravity_img3;
      ImageView linGravityImg3 = ViewBindings.findChildViewById(rootView, id);
      if (linGravityImg3 == null) {
        break missingId;
      }

      id = R.id.linGravity_img4;
      ImageView linGravityImg4 = ViewBindings.findChildViewById(rootView, id);
      if (linGravityImg4 == null) {
        break missingId;
      }

      id = R.id.linGravity_img5;
      ImageView linGravityImg5 = ViewBindings.findChildViewById(rootView, id);
      if (linGravityImg5 == null) {
        break missingId;
      }

      id = R.id.linGravity_img6;
      ImageView linGravityImg6 = ViewBindings.findChildViewById(rootView, id);
      if (linGravityImg6 == null) {
        break missingId;
      }

      id = R.id.linGravity_img7;
      ImageView linGravityImg7 = ViewBindings.findChildViewById(rootView, id);
      if (linGravityImg7 == null) {
        break missingId;
      }

      id = R.id.linGravity_img8;
      ImageView linGravityImg8 = ViewBindings.findChildViewById(rootView, id);
      if (linGravityImg8 == null) {
        break missingId;
      }

      id = R.id.linGravity_img9;
      ImageView linGravityImg9 = ViewBindings.findChildViewById(rootView, id);
      if (linGravityImg9 == null) {
        break missingId;
      }

      id = R.id.til;
      TextInputLayout til = ViewBindings.findChildViewById(rootView, id);
      if (til == null) {
        break missingId;
      }

      return new DialogLayoutGravityBinding((LinearLayout) rootView, autoComp, cbCenterHorizontal,
          cbCenterVertical, cbClipHorizontal, cbClipVertical, cbEnd, cbFill, cbFillHorizontal,
          cbFillVertical, cbStart, linGravityImg1, linGravityImg2, linGravityImg3, linGravityImg4,
          linGravityImg5, linGravityImg6, linGravityImg7, linGravityImg8, linGravityImg9, til);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
