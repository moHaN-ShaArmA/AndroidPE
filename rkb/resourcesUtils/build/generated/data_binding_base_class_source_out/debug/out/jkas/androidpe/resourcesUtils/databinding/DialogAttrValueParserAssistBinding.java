// Generated by view binder compiler. Do not edit!
package jkas.androidpe.resourcesUtils.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.slider.RangeSlider;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.resourcesUtils.R;

public final class DialogAttrValueParserAssistBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnImports;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final Button btnPickColor;

  @NonNull
  public final Button btnPrevious;

  @NonNull
  public final RangeSlider discreteRangeSlider;

  @NonNull
  public final AutoCompleteTextView editRef;

  @NonNull
  public final TextInputEditText editValue;

  @NonNull
  public final ImageView imgSwitch;

  @NonNull
  public final ImageView imgValue;

  @NonNull
  public final TextInputLayout tilRef;

  @NonNull
  public final TextInputLayout tilValue;

  @NonNull
  public final TextView tvInfo;

  @NonNull
  public final ViewFlipper viewFlipper;

  private DialogAttrValueParserAssistBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnImports, @NonNull Button btnNext, @NonNull Button btnPickColor,
      @NonNull Button btnPrevious, @NonNull RangeSlider discreteRangeSlider,
      @NonNull AutoCompleteTextView editRef, @NonNull TextInputEditText editValue,
      @NonNull ImageView imgSwitch, @NonNull ImageView imgValue, @NonNull TextInputLayout tilRef,
      @NonNull TextInputLayout tilValue, @NonNull TextView tvInfo,
      @NonNull ViewFlipper viewFlipper) {
    this.rootView = rootView;
    this.btnImports = btnImports;
    this.btnNext = btnNext;
    this.btnPickColor = btnPickColor;
    this.btnPrevious = btnPrevious;
    this.discreteRangeSlider = discreteRangeSlider;
    this.editRef = editRef;
    this.editValue = editValue;
    this.imgSwitch = imgSwitch;
    this.imgValue = imgValue;
    this.tilRef = tilRef;
    this.tilValue = tilValue;
    this.tvInfo = tvInfo;
    this.viewFlipper = viewFlipper;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAttrValueParserAssistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAttrValueParserAssistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_attr_value_parser_assist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAttrValueParserAssistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnImports;
      Button btnImports = ViewBindings.findChildViewById(rootView, id);
      if (btnImports == null) {
        break missingId;
      }

      id = R.id.btnNext;
      Button btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btnPickColor;
      Button btnPickColor = ViewBindings.findChildViewById(rootView, id);
      if (btnPickColor == null) {
        break missingId;
      }

      id = R.id.btnPrevious;
      Button btnPrevious = ViewBindings.findChildViewById(rootView, id);
      if (btnPrevious == null) {
        break missingId;
      }

      id = R.id.discreteRangeSlider;
      RangeSlider discreteRangeSlider = ViewBindings.findChildViewById(rootView, id);
      if (discreteRangeSlider == null) {
        break missingId;
      }

      id = R.id.editRef;
      AutoCompleteTextView editRef = ViewBindings.findChildViewById(rootView, id);
      if (editRef == null) {
        break missingId;
      }

      id = R.id.editValue;
      TextInputEditText editValue = ViewBindings.findChildViewById(rootView, id);
      if (editValue == null) {
        break missingId;
      }

      id = R.id.imgSwitch;
      ImageView imgSwitch = ViewBindings.findChildViewById(rootView, id);
      if (imgSwitch == null) {
        break missingId;
      }

      id = R.id.imgValue;
      ImageView imgValue = ViewBindings.findChildViewById(rootView, id);
      if (imgValue == null) {
        break missingId;
      }

      id = R.id.tilRef;
      TextInputLayout tilRef = ViewBindings.findChildViewById(rootView, id);
      if (tilRef == null) {
        break missingId;
      }

      id = R.id.tilValue;
      TextInputLayout tilValue = ViewBindings.findChildViewById(rootView, id);
      if (tilValue == null) {
        break missingId;
      }

      id = R.id.tvInfo;
      TextView tvInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvInfo == null) {
        break missingId;
      }

      id = R.id.viewFlipper;
      ViewFlipper viewFlipper = ViewBindings.findChildViewById(rootView, id);
      if (viewFlipper == null) {
        break missingId;
      }

      return new DialogAttrValueParserAssistBinding((LinearLayout) rootView, btnImports, btnNext,
          btnPickColor, btnPrevious, discreteRangeSlider, editRef, editValue, imgSwitch, imgValue,
          tilRef, tilValue, tvInfo, viewFlipper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
