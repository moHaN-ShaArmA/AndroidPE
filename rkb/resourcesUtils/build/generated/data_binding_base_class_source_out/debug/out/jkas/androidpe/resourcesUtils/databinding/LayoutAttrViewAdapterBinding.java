// Generated by view binder compiler. Do not edit!
package jkas.androidpe.resourcesUtils.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.MultiAutoCompleteTextView;
import android.widget.TextView;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.resourcesUtils.R;

public final class LayoutAttrViewAdapterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputLayout TIL;

  @NonNull
  public final ImageView icDelete;

  @NonNull
  public final ImageView icImg;

  @NonNull
  public final MultiAutoCompleteTextView multiAutoCompTV;

  @NonNull
  public final TextView tvAssist;

  @NonNull
  public final ViewFlipper viewFlipper;

  private LayoutAttrViewAdapterBinding(@NonNull LinearLayout rootView, @NonNull TextInputLayout TIL,
      @NonNull ImageView icDelete, @NonNull ImageView icImg,
      @NonNull MultiAutoCompleteTextView multiAutoCompTV, @NonNull TextView tvAssist,
      @NonNull ViewFlipper viewFlipper) {
    this.rootView = rootView;
    this.TIL = TIL;
    this.icDelete = icDelete;
    this.icImg = icImg;
    this.multiAutoCompTV = multiAutoCompTV;
    this.tvAssist = tvAssist;
    this.viewFlipper = viewFlipper;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutAttrViewAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutAttrViewAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_attr_view_adapter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutAttrViewAdapterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TIL;
      TextInputLayout TIL = ViewBindings.findChildViewById(rootView, id);
      if (TIL == null) {
        break missingId;
      }

      id = R.id.icDelete;
      ImageView icDelete = ViewBindings.findChildViewById(rootView, id);
      if (icDelete == null) {
        break missingId;
      }

      id = R.id.icImg;
      ImageView icImg = ViewBindings.findChildViewById(rootView, id);
      if (icImg == null) {
        break missingId;
      }

      id = R.id.multiAutoCompTV;
      MultiAutoCompleteTextView multiAutoCompTV = ViewBindings.findChildViewById(rootView, id);
      if (multiAutoCompTV == null) {
        break missingId;
      }

      id = R.id.tvAssist;
      TextView tvAssist = ViewBindings.findChildViewById(rootView, id);
      if (tvAssist == null) {
        break missingId;
      }

      id = R.id.viewFlipper;
      ViewFlipper viewFlipper = ViewBindings.findChildViewById(rootView, id);
      if (viewFlipper == null) {
        break missingId;
      }

      return new LayoutAttrViewAdapterBinding((LinearLayout) rootView, TIL, icDelete, icImg,
          multiAutoCompTV, tvAssist, viewFlipper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
