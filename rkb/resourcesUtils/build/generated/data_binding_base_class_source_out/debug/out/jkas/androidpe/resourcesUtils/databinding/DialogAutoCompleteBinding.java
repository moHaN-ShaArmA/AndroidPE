// Generated by view binder compiler. Do not edit!
package jkas.androidpe.resourcesUtils.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.resourcesUtils.R;

public final class DialogAutoCompleteBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AutoCompleteTextView autoComp;

  @NonNull
  public final LinearLayout linAdditional;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TextInputLayout til;

  @NonNull
  public final TextView tvInfo;

  private DialogAutoCompleteBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AutoCompleteTextView autoComp, @NonNull LinearLayout linAdditional,
      @NonNull NestedScrollView nestedScrollView, @NonNull TextInputLayout til,
      @NonNull TextView tvInfo) {
    this.rootView = rootView;
    this.autoComp = autoComp;
    this.linAdditional = linAdditional;
    this.nestedScrollView = nestedScrollView;
    this.til = til;
    this.tvInfo = tvInfo;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAutoCompleteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAutoCompleteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_auto_complete, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAutoCompleteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoComp;
      AutoCompleteTextView autoComp = ViewBindings.findChildViewById(rootView, id);
      if (autoComp == null) {
        break missingId;
      }

      id = R.id.linAdditional;
      LinearLayout linAdditional = ViewBindings.findChildViewById(rootView, id);
      if (linAdditional == null) {
        break missingId;
      }

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.til;
      TextInputLayout til = ViewBindings.findChildViewById(rootView, id);
      if (til == null) {
        break missingId;
      }

      id = R.id.tvInfo;
      TextView tvInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvInfo == null) {
        break missingId;
      }

      return new DialogAutoCompleteBinding((CoordinatorLayout) rootView, autoComp, linAdditional,
          nestedScrollView, til, tvInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
