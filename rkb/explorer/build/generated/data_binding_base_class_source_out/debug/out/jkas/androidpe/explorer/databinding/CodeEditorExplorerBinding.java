// Generated by view binder compiler. Do not edit!
package jkas.androidpe.explorer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.explorer.R;

public final class CodeEditorExplorerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnAndroid;

  @NonNull
  public final MaterialButton btnProject;

  @NonNull
  public final LinearLayout linData;

  @NonNull
  public final MaterialButtonToggleGroup toggleButton;

  private CodeEditorExplorerBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton btnAndroid, @NonNull MaterialButton btnProject,
      @NonNull LinearLayout linData, @NonNull MaterialButtonToggleGroup toggleButton) {
    this.rootView = rootView;
    this.btnAndroid = btnAndroid;
    this.btnProject = btnProject;
    this.linData = linData;
    this.toggleButton = toggleButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CodeEditorExplorerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CodeEditorExplorerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.code_editor_explorer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CodeEditorExplorerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAndroid;
      MaterialButton btnAndroid = ViewBindings.findChildViewById(rootView, id);
      if (btnAndroid == null) {
        break missingId;
      }

      id = R.id.btnProject;
      MaterialButton btnProject = ViewBindings.findChildViewById(rootView, id);
      if (btnProject == null) {
        break missingId;
      }

      id = R.id.linData;
      LinearLayout linData = ViewBindings.findChildViewById(rootView, id);
      if (linData == null) {
        break missingId;
      }

      id = R.id.toggleButton;
      MaterialButtonToggleGroup toggleButton = ViewBindings.findChildViewById(rootView, id);
      if (toggleButton == null) {
        break missingId;
      }

      return new CodeEditorExplorerBinding((LinearLayout) rootView, btnAndroid, btnProject, linData,
          toggleButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
