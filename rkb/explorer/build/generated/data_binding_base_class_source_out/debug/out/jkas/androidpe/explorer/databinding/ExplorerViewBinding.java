// Generated by view binder compiler. Do not edit!
package jkas.androidpe.explorer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.explorer.R;

public final class ExplorerViewBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton btnAdd;

  @NonNull
  public final FloatingActionButton btnCopy;

  @NonNull
  public final FloatingActionButton btnCut;

  @NonNull
  public final FloatingActionButton btnDownload;

  @NonNull
  public final FloatingActionButton btnSelectMode;

  @NonNull
  public final LinearLayout linBottomTools;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView tvTop;

  private ExplorerViewBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton btnAdd, @NonNull FloatingActionButton btnCopy,
      @NonNull FloatingActionButton btnCut, @NonNull FloatingActionButton btnDownload,
      @NonNull FloatingActionButton btnSelectMode, @NonNull LinearLayout linBottomTools,
      @NonNull RecyclerView recyclerView, @NonNull TextView tvTop) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnCopy = btnCopy;
    this.btnCut = btnCut;
    this.btnDownload = btnDownload;
    this.btnSelectMode = btnSelectMode;
    this.linBottomTools = linBottomTools;
    this.recyclerView = recyclerView;
    this.tvTop = tvTop;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ExplorerViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExplorerViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.explorer_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExplorerViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      FloatingActionButton btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnCopy;
      FloatingActionButton btnCopy = ViewBindings.findChildViewById(rootView, id);
      if (btnCopy == null) {
        break missingId;
      }

      id = R.id.btnCut;
      FloatingActionButton btnCut = ViewBindings.findChildViewById(rootView, id);
      if (btnCut == null) {
        break missingId;
      }

      id = R.id.btnDownload;
      FloatingActionButton btnDownload = ViewBindings.findChildViewById(rootView, id);
      if (btnDownload == null) {
        break missingId;
      }

      id = R.id.btnSelectMode;
      FloatingActionButton btnSelectMode = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectMode == null) {
        break missingId;
      }

      id = R.id.linBottomTools;
      LinearLayout linBottomTools = ViewBindings.findChildViewById(rootView, id);
      if (linBottomTools == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.tvTop;
      TextView tvTop = ViewBindings.findChildViewById(rootView, id);
      if (tvTop == null) {
        break missingId;
      }

      return new ExplorerViewBinding((CoordinatorLayout) rootView, btnAdd, btnCopy, btnCut,
          btnDownload, btnSelectMode, linBottomTools, recyclerView, tvTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
