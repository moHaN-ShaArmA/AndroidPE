// Generated by view binder compiler. Do not edit!
package jkas.androidpe.explorer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.explorer.R;

public final class DialogNewModuleCreatorBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextInputLayout TILModuleName;

  @NonNull
  public final TextInputLayout TILModulePackage;

  @NonNull
  public final MaterialButton btnAndroidLib;

  @NonNull
  public final MaterialButton btnApplication;

  @NonNull
  public final MaterialButton btnJava;

  @NonNull
  public final MaterialButton btnKotlin;

  @NonNull
  public final MaterialCheckBox cbKotlinScript;

  @NonNull
  public final CoordinatorLayout coordinator;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TextInputEditText textInputFinalPath;

  @NonNull
  public final TextInputEditText textInputModuleName;

  @NonNull
  public final TextInputEditText textInputPkg;

  @NonNull
  public final MaterialButtonToggleGroup toggleBtnLanguage;

  @NonNull
  public final MaterialButtonToggleGroup toggleBtnModuleType;

  private DialogNewModuleCreatorBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextInputLayout TILModuleName, @NonNull TextInputLayout TILModulePackage,
      @NonNull MaterialButton btnAndroidLib, @NonNull MaterialButton btnApplication,
      @NonNull MaterialButton btnJava, @NonNull MaterialButton btnKotlin,
      @NonNull MaterialCheckBox cbKotlinScript, @NonNull CoordinatorLayout coordinator,
      @NonNull NestedScrollView nestedScrollView, @NonNull TextInputEditText textInputFinalPath,
      @NonNull TextInputEditText textInputModuleName, @NonNull TextInputEditText textInputPkg,
      @NonNull MaterialButtonToggleGroup toggleBtnLanguage,
      @NonNull MaterialButtonToggleGroup toggleBtnModuleType) {
    this.rootView = rootView;
    this.TILModuleName = TILModuleName;
    this.TILModulePackage = TILModulePackage;
    this.btnAndroidLib = btnAndroidLib;
    this.btnApplication = btnApplication;
    this.btnJava = btnJava;
    this.btnKotlin = btnKotlin;
    this.cbKotlinScript = cbKotlinScript;
    this.coordinator = coordinator;
    this.nestedScrollView = nestedScrollView;
    this.textInputFinalPath = textInputFinalPath;
    this.textInputModuleName = textInputModuleName;
    this.textInputPkg = textInputPkg;
    this.toggleBtnLanguage = toggleBtnLanguage;
    this.toggleBtnModuleType = toggleBtnModuleType;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogNewModuleCreatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogNewModuleCreatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_new_module_creator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogNewModuleCreatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TILModuleName;
      TextInputLayout TILModuleName = ViewBindings.findChildViewById(rootView, id);
      if (TILModuleName == null) {
        break missingId;
      }

      id = R.id.TILModulePackage;
      TextInputLayout TILModulePackage = ViewBindings.findChildViewById(rootView, id);
      if (TILModulePackage == null) {
        break missingId;
      }

      id = R.id.btnAndroidLib;
      MaterialButton btnAndroidLib = ViewBindings.findChildViewById(rootView, id);
      if (btnAndroidLib == null) {
        break missingId;
      }

      id = R.id.btnApplication;
      MaterialButton btnApplication = ViewBindings.findChildViewById(rootView, id);
      if (btnApplication == null) {
        break missingId;
      }

      id = R.id.btnJava;
      MaterialButton btnJava = ViewBindings.findChildViewById(rootView, id);
      if (btnJava == null) {
        break missingId;
      }

      id = R.id.btnKotlin;
      MaterialButton btnKotlin = ViewBindings.findChildViewById(rootView, id);
      if (btnKotlin == null) {
        break missingId;
      }

      id = R.id.cbKotlinScript;
      MaterialCheckBox cbKotlinScript = ViewBindings.findChildViewById(rootView, id);
      if (cbKotlinScript == null) {
        break missingId;
      }

      CoordinatorLayout coordinator = (CoordinatorLayout) rootView;

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.textInputFinalPath;
      TextInputEditText textInputFinalPath = ViewBindings.findChildViewById(rootView, id);
      if (textInputFinalPath == null) {
        break missingId;
      }

      id = R.id.textInputModuleName;
      TextInputEditText textInputModuleName = ViewBindings.findChildViewById(rootView, id);
      if (textInputModuleName == null) {
        break missingId;
      }

      id = R.id.textInputPkg;
      TextInputEditText textInputPkg = ViewBindings.findChildViewById(rootView, id);
      if (textInputPkg == null) {
        break missingId;
      }

      id = R.id.toggleBtnLanguage;
      MaterialButtonToggleGroup toggleBtnLanguage = ViewBindings.findChildViewById(rootView, id);
      if (toggleBtnLanguage == null) {
        break missingId;
      }

      id = R.id.toggleBtnModuleType;
      MaterialButtonToggleGroup toggleBtnModuleType = ViewBindings.findChildViewById(rootView, id);
      if (toggleBtnModuleType == null) {
        break missingId;
      }

      return new DialogNewModuleCreatorBinding((CoordinatorLayout) rootView, TILModuleName,
          TILModulePackage, btnAndroidLib, btnApplication, btnJava, btnKotlin, cbKotlinScript,
          coordinator, nestedScrollView, textInputFinalPath, textInputModuleName, textInputPkg,
          toggleBtnLanguage, toggleBtnModuleType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
