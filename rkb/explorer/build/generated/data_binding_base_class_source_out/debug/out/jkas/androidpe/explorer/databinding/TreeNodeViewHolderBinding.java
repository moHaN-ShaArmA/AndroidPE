// Generated by view binder compiler. Do not edit!
package jkas.androidpe.explorer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import jkas.androidpe.explorer.R;

public final class TreeNodeViewHolderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView icChevron;

  @NonNull
  public final ImageView icIcon;

  @NonNull
  public final LinearLayout linChild;

  @NonNull
  public final LinearLayout linView;

  @NonNull
  public final ProgressBar loadingProgress;

  @NonNull
  public final TextView tvDesc;

  @NonNull
  public final ViewFlipper vfChevron;

  private TreeNodeViewHolderBinding(@NonNull LinearLayout rootView, @NonNull ImageView icChevron,
      @NonNull ImageView icIcon, @NonNull LinearLayout linChild, @NonNull LinearLayout linView,
      @NonNull ProgressBar loadingProgress, @NonNull TextView tvDesc,
      @NonNull ViewFlipper vfChevron) {
    this.rootView = rootView;
    this.icChevron = icChevron;
    this.icIcon = icIcon;
    this.linChild = linChild;
    this.linView = linView;
    this.loadingProgress = loadingProgress;
    this.tvDesc = tvDesc;
    this.vfChevron = vfChevron;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TreeNodeViewHolderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TreeNodeViewHolderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tree_node_view_holder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TreeNodeViewHolderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ic_chevron;
      ImageView icChevron = ViewBindings.findChildViewById(rootView, id);
      if (icChevron == null) {
        break missingId;
      }

      id = R.id.ic_icon;
      ImageView icIcon = ViewBindings.findChildViewById(rootView, id);
      if (icIcon == null) {
        break missingId;
      }

      id = R.id.linChild;
      LinearLayout linChild = ViewBindings.findChildViewById(rootView, id);
      if (linChild == null) {
        break missingId;
      }

      id = R.id.linView;
      LinearLayout linView = ViewBindings.findChildViewById(rootView, id);
      if (linView == null) {
        break missingId;
      }

      id = R.id.loading_progress;
      ProgressBar loadingProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgress == null) {
        break missingId;
      }

      id = R.id.tv_desc;
      TextView tvDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvDesc == null) {
        break missingId;
      }

      id = R.id.vf_chevron;
      ViewFlipper vfChevron = ViewBindings.findChildViewById(rootView, id);
      if (vfChevron == null) {
        break missingId;
      }

      return new TreeNodeViewHolderBinding((LinearLayout) rootView, icChevron, icIcon, linChild,
          linView, loadingProgress, tvDesc, vfChevron);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
